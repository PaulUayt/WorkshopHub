@using WorkshopHub.Contract.Responses
@model List<WorkshopWithSessionsResponse>

@{
    ViewData["Title"] = "Workshops";
    var returnUrl = Context.Request.Path + Context.Request.QueryString;
}

<h2>Workshops</h2>

<a asp-action="Upsert" asp-route-returnUrl="@returnUrl" class="btn btn-success mb-3">Create New Workshop</a>

<div class="row">
    @foreach (var workshop in Model)
    {
        <div class="col-md-6 mb-4">
            <div class="card h-100 shadow-sm d-flex flex-column">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">@workshop.Title</h5>
                    <p class="card-text"><strong>Description:</strong> @workshop.Description</p>
                    <p class="card-text"><strong>Duration(hh:mm):</strong> @workshop.Duration.ToString(@"hh\:mm")</p>
                    <p class="card-text"><strong>Category:</strong> @workshop.CategoryName</p>
                    <p class="card-text"><strong>Trainer:</strong> @workshop.TrainerName</p>

                    <h6>Sessions:</h6>
                    <div class="d-flex flex-wrap gap-2 mb-3">
                        @if (workshop.Sessions.Any())
                        {
                            @foreach (var session in workshop.Sessions)
                            {
                                <div class="border rounded p-2 bg-light session-block"
                                     style="cursor:pointer;"
                                     data-bs-toggle="modal"
                                     data-bs-target="#sessionModal"
                                     data-session-id="@session.SessionId"
                                     data-start-time="@session.StartTime.ToString("f")">
                                    @session.StartTime.ToString("g")
                                </div>
                            }
                        }
                        else 
                        {
                            <span class="text-muted">No sessions available</span>
                        }

                        
                    </div>

                    <div class="mt-auto pt-2 border-top d-flex flex-wrap gap-2">
                        <a asp-action="Upsert"
                           asp-route-id="@workshop.WorkshopId"
                           asp-route-returnUrl="@returnUrl"
                           class="btn btn-sm btn-warning">Edit</a>

                        <form asp-action="Delete"
                              asp-route-id="@workshop.WorkshopId"
                              asp-route-returnUrl="@returnUrl"
                              method="post" class="d-inline">
                            <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this workshop?')">Delete</button>
                        </form>

                        <a asp-controller="Sessions"
                           asp-action="Upsert"
                           asp-route-workshopId="@workshop.WorkshopId"
                           asp-route-returnUrl="@returnUrl"
                           class="btn btn-sm btn-success">Add Session</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Session Modal -->
<div class="modal fade" id="sessionModal" tabindex="-1" aria-labelledby="sessionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Session Info</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p><strong>Start Time:</strong> <span id="sessionStartTime"></span></p>
                <div class="d-flex justify-content-end gap-2">
                    <a id="editSessionBtn" class="btn btn-sm btn-primary">Edit</a>
                    <form id="deleteSessionForm" method="post" class="d-inline">
                        <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this session?')">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const sessionModal = document.getElementById('sessionModal');
        sessionModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const sessionId = button.getAttribute('data-session-id');
            const startTime = button.getAttribute('data-start-time');

            document.getElementById('sessionStartTime').textContent = startTime;

            const returnUrl = encodeURIComponent(window.location.pathname + window.location.search);

            const editBtn = document.getElementById('editSessionBtn');
            editBtn.href = `/Sessions/Upsert/${sessionId}?returnUrl=${returnUrl}`;

            const deleteForm = document.getElementById('deleteSessionForm');
            deleteForm.action = `/Sessions/Delete/${sessionId}?returnUrl=${returnUrl}`;
        });
    </script>
}
